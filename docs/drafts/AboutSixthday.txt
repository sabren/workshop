The name "sixthday" comes from the movie TheSixthDay, which
deals with cloning. In the movie, clones are created by
modifying generic, fully grown bodies stripped of genetic
information.

Similarly, the sixthday project aims to provide generic
services such as user administration, object categorization,
and form-handling. These services can be quickly strung
together and then customized through templates.

The sixthday project has been developed privately since 1998
(it was renamed after the movie) and is now available as
open source under a python style license.

There are several SixthdayApplications in various stages
of development.


---------

here are some old, old  notes from when I started this project.
Some of it is still accurate...

1011.2000

The beauty of the zike architecture is that it doesn't tie your
applications to the web. You build a front end that presents and
modifies stuff on the web, but your actual objects can live on a
webserver, the desktop, inside the smartbox, or even on a hand held
device (once the python machine gets working there).

  * you can partition off your database so that users can have the same
tables, but never see each other's data.
  * very little code to work with database
  * standard wizards, formacceptors, and other actors make saving objects a breeze...
  * authentication is handled for you
  * permission checking is handled for you
  * design websites in a RAD tool (eventually)
  * only use what you need
  * familiar to ASP and PHP developers
  * loads quickly (.pc files)


