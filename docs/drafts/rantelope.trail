<?xml version="1.0"?>
<?xml-stylesheet type="text/css" href="workshop.css"?>
<trail xmlns:html="http://www.w3.org/1999/html">

<title>rantelope: real good content management</title>


<p>okay. so yay. here's how we can build a blogging tool
with all this crap.</p>

<p>we'll go feature by feature here.</p>

<p>the idea is we'll keep this up to date with best
practices given the currently available libraries.
so if you just want to see how to USE this stuff,
this is the document to read.</p>

<hr/>

<goal>atom feed</goal>

<p>Our goal is to create an atom-enabled blog. So, let's start with
the simplest example from the <a
href="http://atompub.org/2005/08/17/draft-ietf-atompub-format-11.html">atom
spec:</a></p>

<pre>
<![CDATA[
   <?xml version="1.0" encoding="utf-8"?>
   <feed xmlns="http://www.w3.org/2005/Atom">
     <title>Example Feed</title>
     <link href="http://example.org/"/>
     <updated>2003-12-13T18:30:02Z</updated>
     <author>
       <name>John Doe</name>
     </author>
     <id>urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6</id>

     <entry>
       <title>Atom-Powered Robots Run Amok</title>
       <link href="http://example.org/2003/12/13/atom03"/>
       <id>urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a</id>
       <updated>2003-12-13T18:30:02Z</updated>
       <summary>Some text.</summary>
     </entry>

   </feed>
]]>
</pre>


<todo>
the plan:

- set up:
  - create an app

multiple feeds from the start

class Feed
   title
   link
   updated
   author
   uid
   entries = linkset(entry)

class Entry
   slug
   title
   created
   updated
   summary
   content


- create the feed
  - save template to atom.zb
  - mount the template at /feed/x
  - fill in the model 
    - 

sort by date

adding a post

comments - show on front page

openID : serving

openID : accepting

add a search engine

</todo>


<goal>single post</goal>

</trail>
