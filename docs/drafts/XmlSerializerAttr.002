= Serializing Properties as Attributes =

Now that we can fine-tune our element names, how about using attributes instead?  It's simple, just add another attribute to the xml map.

== Xml Map ==
{{{
xmlserializer.addMapping(ComicBook, {'__class__': {'__name__':'comicbook'},
                                     '__order__': ('title', 'publisher', 'issues')})
xmlserializer.addMapping(Issue, {'__class__'  : {'__name__':'issue'},
                                 '__order__'  : ('volume', 'number', 'releasedate'),
                                 'volume'     : {'__type__':'attr'},
                                 'number'     : {'__type__':'attr'},
                                 'releasedate': {'__name__':'released'}})
xmlserializer.addMapping(Publisher, {'__class__': {'__name__':'publisher'},
                                     'name'     : {'__type__':'attr'}})
}}}

=== __type__ ===
Notice the new __type__ property.  By default, all properties have a __type__ of ''elem.''  Giving it ''attr'' tells it to serialize as an attribute.

== The Result ==
{{{
<?xml version="1.0" ?>
<comicbook>
  <title>Amazing Spider-Man</title>
  <publisher name="Marvel Comics" />
  <issues>
    <issue volume="1" number="500">
      <released>2003-11-15T00:00:00-05:00</released>
    </issue>
    <issue volume="1" number="501">
      <released>2003-12-16T00:00:00-05:00</released>
    </issue>
  </issues>
</comicbook>
}}}

== Serializing as Content ==
Why stop at attributes?  XmlSerializierContent
